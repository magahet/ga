{
  "status": "active", 
  "unique_views": 190, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "stud", 
      "when": "2017-09-16T18:59:04Z", 
      "data": "j7nofdtdhcf46h"
    }, 
    {
      "to": "j7nofdt9d8u46g", 
      "anon": "no", 
      "when": "2017-09-16T19:08:27Z", 
      "type": "followup", 
      "uid": "hyvx0owj4ot1a0"
    }, 
    {
      "uid": "gy4twfv45cg5o6", 
      "type": "i_answer", 
      "when": "2017-09-16T19:49:32Z", 
      "to": "j7nofdt9d8u46g", 
      "anon": "no", 
      "data": "j7nq8a6ngjr37n"
    }, 
    {
      "to": "j7nofdt9d8u46g", 
      "anon": "no", 
      "when": "2017-09-18T18:13:34Z", 
      "type": "followup", 
      "uid": "i4m49pmqc4h14p"
    }
  ], 
  "upvote_ids": [], 
  "id": "j7nofdt9d8u46g", 
  "bookmarked": 7, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "updated": "2017-09-16T19:08:27Z", 
      "no_upvotes": 0, 
      "uid": "hyvx0owj4ot1a0", 
      "created": "2017-09-16T19:08:27Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7norfobc6k6nc", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p>DP can be thought of as building solutions from the bottom up. \u00a0You start with the smallest or most simple part of the problem, solve it, and then build more complex solutions on top of the solutions you&#39;ve already completed.</p>\n<p></p>\n<p>DC is a top down approach. \u00a0You&#39;re splitting something into smaller and smaller parts that are easier to solve and can then be merged together to come up with the final solution.</p>"
    }, 
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-16T19:49:32Z", 
      "type": "i_answer", 
      "tag_endorse_arr": [
        "i4t8eakz3ex6lk", 
        "i18w67avy8e1uk", 
        "i4jbu18kld03sy"
      ], 
      "id": "j7nq8a6l95w37m", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [
        {
          "name": "abarysevich", 
          "admin": false, 
          "photo": null, 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i4t8eakz3ex6lk"
        }, 
        {
          "name": "Shihgian Lee", 
          "admin": false, 
          "photo": "1420394909_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i18w67avy8e1uk"
        }, 
        {
          "name": "Vina Jacob", 
          "admin": false, 
          "photo": "1484063120_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i4jbu18kld03sy"
        }
      ], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p></p>\n<p>Chris has a good description below. \u00a0Just to add to it:</p>\n<p></p>\n<p>In DP, you break off a small bit at each step, e.g., T(i) in terms of T(i-1). \u00a0There is no recursion in the actual algorithm, you build it up as Chris describes below. \u00a0</p>\n<p></p>\n<p>In D&amp;C, the subproblems are a constant fraction smaller, e.g., n to n/2 in MergeSort or n to 3n/4 in the Median alg. \u00a0The algorithm is recursive.</p>", 
          "anon": "no", 
          "created": "2017-09-16T19:49:32Z", 
          "uid": "gy4twfv45cg5o6", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "updated": "2017-09-18T18:13:34Z", 
      "no_upvotes": 0, 
      "uid": "i4m49pmqc4h14p", 
      "created": "2017-09-18T18:13:34Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7qhoksxtlq5zk", 
      "anon": "no", 
      "bucket_name": "Today", 
      "config": {}, 
      "bucket_order": 2, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p>With regards to Dr Vigoda&#39;s point about building up from other problems, note that DP works best when you build up from problems <em>smaller by a few nodes</em> (e.g. Fib(n) = Fib(prev_n) &#43; Fib(prev_prev_n) ). You can technically do these problems using recursion as well, but then you get exponential number of recursive calls to expand and you don&#39;t have a polynomial time solution.</p>\n<p></p>\n<p>On the other hand, when you use recursion where you build up from problems <em>smaller by a fraction</em> ( such as binary search splitting the sorted array into halves, or the EasyMultiply which breaks n-bit integers into n/2-bit integers ), then the max number of nodes you expand out to is log n. Thus, you get exponential number of calls in log n -- which basically means you get polynomial number of calls in n. Thus, breaking it down into smaller problems works well with recursion -- and this is what we know as Divide &amp; Conquer.</p>\n<p></p>\n<p>For a better explanation, see DPV Chap 6, pg 164. There is a grey box there called &#34;Recursion? No, thanks.&#34;</p>"
    }
  ], 
  "nr": 321, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "hw3", 
    "course"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 4, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "course", 
    "hw3", 
    "student"
  ], 
  "created": "2017-09-16T18:59:04Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145239843, 
  "tag_good": [
    {
      "name": "Chris Noyes", 
      "admin": false, 
      "photo": null, 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "idej2kl6hh1"
    }, 
    {
      "name": "Shihgian Lee", 
      "admin": false, 
      "photo": "1420394909_35.png", 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "i18w67avy8e1uk"
    }, 
    {
      "name": "Vina Jacob", 
      "admin": false, 
      "photo": "1484063120_35.png", 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "i4jbu18kld03sy"
    }
  ], 
  "tag_good_arr": [
    "idej2kl6hh1", 
    "i18w67avy8e1uk", 
    "i4jbu18kld03sy"
  ], 
  "history": [
    {
      "content": "<p>I am a bit confused regarding the difference between DC and DP..</p>\n<p>To me, they have the similar concept of breaking problems into its sub problems and then recurrence within its sub problems.\u00a0</p>\n<p>Is there any more specific explanation that can help me better understand these two algorithms?\u00a0</p>\n<p>Regards.</p>", 
      "anon": "stud", 
      "created": "2017-09-16T18:59:04Z", 
      "subject": "Confusion regarding the difference between DP and DC"
    }
  ]
}