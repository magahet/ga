{
  "status": "active", 
  "unique_views": 167, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-09-21T01:09:39Z", 
      "data": "j7trfdaj4ww2c2", 
      "uid": "hqa65fnalg83fr"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-09-21T01:25:20Z", 
      "data": "j7trzj612m58m", 
      "uid": "hqa65fnalg83fr"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-09-21T01:35:13Z", 
      "data": "j7tsc88l35f1yh", 
      "uid": "hqa65fnalg83fr"
    }, 
    {
      "to": "j7trfdah8rl2c1", 
      "anon": "no", 
      "when": "2017-09-21T04:10:56Z", 
      "type": "followup", 
      "uid": "i8597qyse9c1v2"
    }, 
    {
      "to": "j7trfdah8rl2c1", 
      "anon": "no", 
      "when": "2017-09-21T04:40:30Z", 
      "type": "feedback", 
      "uid": "hqa65fnalg83fr"
    }, 
    {
      "to": "j7trfdah8rl2c1", 
      "anon": "no", 
      "when": "2017-09-21T04:45:30Z", 
      "type": "feedback", 
      "uid": "i8597qyse9c1v2"
    }, 
    {
      "to": "j7trfdah8rl2c1", 
      "anon": "no", 
      "when": "2017-09-21T04:47:25Z", 
      "type": "feedback", 
      "uid": "hqa65fnalg83fr"
    }, 
    {
      "to": "j7trfdah8rl2c1", 
      "anon": "stud", 
      "when": "2017-09-21T23:39:14Z", 
      "data": "j7v3mxj02tn553", 
      "type": "s_answer"
    }
  ], 
  "upvote_ids": [], 
  "id": "j7trfdah8rl2c1", 
  "bookmarked": 5, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "updated": "2017-09-21T04:10:56Z", 
      "d-bucket": "Yesterday", 
      "no_upvotes": 0, 
      "uid": "i8597qyse9c1v2", 
      "created": "2017-09-21T04:10:56Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7txwhy6wssu2", 
      "anon": "no", 
      "bucket_name": "Yesterday", 
      "config": {}, 
      "bucket_order": 3, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-09-21T04:40:30Z", 
          "uid": "hqa65fnalg83fr", 
          "created": "2017-09-21T04:40:30Z", 
          "type": "feedback", 
          "d-bucket": "Yesterday", 
          "id": "j7tyyicfh02ew", 
          "anon": "no", 
          "bucket_name": "Yesterday", 
          "config": {}, 
          "bucket_order": 3, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>I think your solution is pretty much the same as mine. Is it not?\u00a0<br />(just structured a bit different)<br /><br /></p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-21T04:45:30Z", 
          "uid": "i8597qyse9c1v2", 
          "created": "2017-09-21T04:45:30Z", 
          "type": "feedback", 
          "d-bucket": "Yesterday", 
          "id": "j7tz4y9e4j73us", 
          "anon": "no", 
          "bucket_name": "Yesterday", 
          "config": {}, 
          "bucket_order": 3, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>It looks like we agreed on a solution then ;)</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-21T04:47:25Z", 
          "uid": "hqa65fnalg83fr", 
          "created": "2017-09-21T04:47:25Z", 
          "type": "feedback", 
          "d-bucket": "Yesterday", 
          "id": "j7tz7f1hv6o6zm", 
          "anon": "no", 
          "bucket_name": "Yesterday", 
          "config": {}, 
          "bucket_order": 3, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>I guess so.. thanks.<br />I&#39;m glad we do. :)<br /><br />This one was hard to parse.</p>"
        }
      ], 
      "subject": "<p>Let $$p_i$$ be one of the $$q$$ column patterns, $$before(i)$$ be a set of compatible patterns that might have come before $$p_i$$, and $$gain(i,c)$$ the simple summation of gains given a pattern $$p_i$$ on column $$c$$. Then we have $$S(i,c)$$ as the maximum gain possible using columns $$1,...,c$$ ending in pattern $$p_i$$. Thus $$S(i,c)=\\max_k{S(k,c-1)}&#43;gain(i,c)$$ for all $$k\\in before(i)$$. The solution follows as $$\\max_i{S(i,n)}$$. This runs in $$O(n)$$ time.</p>"
    }, 
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-21T23:39:14Z", 
      "type": "s_answer", 
      "tag_endorse_arr": [], 
      "id": "j7v3mxiwigm552", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>Shouldn&#39;t there be 8 possible patterns? \u00a0Empty pattern (which everything is compatible), 4 with 1 pebble, and 3 with 2.</p>\n<p></p>\n<p></p>", 
          "anon": "stud", 
          "created": "2017-09-21T23:39:14Z", 
          "subject": ""
        }
      ]
    }
  ], 
  "nr": 372, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "dynamic_programming"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 1, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "dynamic_programming", 
    "student"
  ], 
  "created": "2017-09-21T01:09:39Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145225536, 
  "tag_good": [], 
  "tag_good_arr": [], 
  "history": [
    {
      "content": "<p>This wasn&#39;t assigned but has anyone looked at DPV 6.5 - Pebbling a Checkerboard?<br /><br />Input:\u00a0 $$s_{11} ... s{4n} $$\u00a0 the values in each of the 4n squares<br /><br />My solution is:<br /><br />B(i, T) = indicates the optimal sum of the covered squares up to the ith column where the ith column is of type T.<br /><br />Types = T1...T7 which are 7 permissible permutations of a column. Expressed in binary the types are 1000, 0100, 0010, 0001, 1010, 0101, 1001<br /><br />Value(i, T) =\u00a0$$s_{ij}$$ if T in {T1, .. ,T4}<br />Value(i, T5) =\u00a0$$s_{1j} &#43; s_{3j}$$\u00a0</p>\n<p>Value(i, T6) =\u00a0$$s_{2j} &#43; s_{4j}$$\u00a0</p>\n<p>Value(i, T7) =\u00a0$$s_{1j} &#43; s_{4j}$$<br /><br />B(1,T) = Value(1,T)\u00a0 \u00a0for all Tk\u00a0 \u00a0 \u00a0(k = 1..7)<br />B(i, T) = Value(i, T)\u00a0 \u00a0&#43; $$max_{t}$$ { B(i-1,t) : compatible(T, t) }<br /><br />Output:\u00a0\u00a0$$max_{T}$${B(n,T)}<br /><br /><br />Has anyone else tried this problem?\u00a0<br />Any mistakes in my formulation?<br /><br /><br /><strong>Edit:</strong> a simple solution to compatible(a,b) is\u00a0<br /><br />Compatible(a,b) = 0000 == a &amp; b\u00a0 \u00a0 (where &amp; is bitwise AND)</p>", 
      "anon": "no", 
      "created": "2017-09-21T01:35:13Z", 
      "uid": "hqa65fnalg83fr", 
      "subject": "Solution to 6.5 (practice problem)"
    }, 
    {
      "content": "<p>This wasn&#39;t assigned but has anyone looked at DPV 6.5 - Pebbling a Checkerboard?<br /><br />Input:\u00a0 $$s_{11} ... s{4n} $$\u00a0 the values in each of the 4n squares<br /><br />My solution is:<br /><br />B(i, T) = indicates the optimal sum of the covered squares up to the ith column where the ith column is of type T.<br /><br />Types = T1...T7 which are 7 permissible permutations of a column. Expressed in binary the types are 1000, 0100, 0010, 0001, 1010, 0101, 1001<br /><br />Value(i, T) =\u00a0$$s_{ij}$$ if T in {T1, .. ,T4}<br />Value(i, T5) =\u00a0$$s_{1j} &#43; s_{3j}$$\u00a0</p>\n<p>Value(i, T6) =\u00a0$$s_{2j} &#43; s_{4j}$$\u00a0</p>\n<p>Value(i, T7) =\u00a0$$s_{1j} &#43; s_{4j}$$<br /><br />B(1,T) = Value(1,T)\u00a0 \u00a0for all Tk\u00a0 \u00a0 \u00a0(k = 1..7)<br />B(i, T) = Value(i, T)\u00a0 \u00a0&#43; $$max_{t}$$ { B(i-1,t) : compatible(T, t) }<br /><br />Output:\u00a0\u00a0$$max_{T}$${B(n,T)}<br /><br /><br />Has anyone else tried this problem?\u00a0<br />Any mistakes in my formulation?</p>", 
      "anon": "no", 
      "created": "2017-09-21T01:25:20Z", 
      "uid": "hqa65fnalg83fr", 
      "subject": "Solution to 6.5 (practice problem)"
    }, 
    {
      "content": "<p>This wasn&#39;t assigned but has anyone looked at 6.5?<br /><br />Input:\u00a0 $$s_{11} ... s{4n} $$\u00a0 the values in each of the 4n squares<br /><br />My solution is:<br /><br />B(i, T) = indicates the optimal sum of the covered squares up to the ith column where the ith column is of type T.<br /><br />Types = T1...T7 which are 7 permissible permutations of a column. Expressed in binary the types are 1000, 0100, 0010, 0001, 1010, 0101, 1001<br /><br />Value(i, T) =\u00a0$$s_{ij}$$ if T in {T1, .. ,T4}<br />Value(i, T5) =\u00a0$$s_{1j} &#43; s_{3j}$$\u00a0</p>\n<p>Value(i, T6) =\u00a0$$s_{2j} &#43; s_{4j}$$\u00a0</p>\n<p>Value(i, T7) =\u00a0$$s_{1j} &#43; s_{4j}$$<br /><br />B(1,T) = Value(1,T)\u00a0 \u00a0for all Tk\u00a0 \u00a0 \u00a0(k = 1..7)<br />B(i, T) = Value(i, T)\u00a0 \u00a0&#43; $$max_{t}$$ { B(i-1,t) : compatible(T, t) }<br /><br />Output:\u00a0\u00a0$$max_{T}$${B(n,T)}<br /><br /><br />Has anyone else tried this problem?\u00a0<br />Any mistakes in my formulation?</p>", 
      "anon": "no", 
      "created": "2017-09-21T01:09:39Z", 
      "uid": "hqa65fnalg83fr", 
      "subject": "Solution to 6.5 (practice problem)"
    }
  ]
}