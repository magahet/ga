{
  "status": "active", 
  "unique_views": 238, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-08-23T04:13:45Z", 
      "data": "j6oi8end70d218", 
      "uid": "i4pvwmg5VTb"
    }, 
    {
      "uid": "gns9oa0pgsO", 
      "type": "i_answer", 
      "when": "2017-08-23T11:22:13Z", 
      "to": "j6oi8en6yku217", 
      "anon": "no", 
      "data": "j6oxjf5dc1i6f5"
    }, 
    {
      "to": "j6oi8en6yku217", 
      "anon": "no", 
      "when": "2017-08-23T16:02:54Z", 
      "type": "followup", 
      "uid": "gy4twfv45cg5o6"
    }
  ], 
  "upvote_ids": [], 
  "id": "j6oi8en6yku217", 
  "bookmarked": 3, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-08-23T11:22:13Z", 
      "type": "i_answer", 
      "tag_endorse_arr": [
        "hv1gl7gmpkj41y", 
        "idfwkujs17e3ky", 
        "i4knvwlqXZ8"
      ], 
      "id": "j6oxjf5bsro6f4", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [
        {
          "name": "William Miller", 
          "admin": false, 
          "photo": "1408322716_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "hv1gl7gmpkj41y"
        }, 
        {
          "name": "Blaine Spear", 
          "admin": false, 
          "photo": "1494887789_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "idfwkujs17e3ky"
        }, 
        {
          "name": "Matthew Clarke", 
          "admin": false, 
          "photo": "1468354733_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i4knvwlqXZ8"
        }
      ], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>One thing I did when I took both the undergrad and master&#39;s version of the this\u00a0class was manually code many of the algorithms to test my logic.\u00a0 Particularly in a language/environment that allows for breakpoints, it can be enlightening to see the results evolve.</p>", 
          "anon": "no", 
          "created": "2017-08-23T11:22:13Z", 
          "uid": "gns9oa0pgsO", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "updated": "2017-08-23T16:02:54Z", 
      "no_upvotes": 0, 
      "uid": "gy4twfv45cg5o6", 
      "created": "2017-08-23T16:02:54Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j6p7kdvxzs479u", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p></p>\n<p>That is John Turner&#39;s reply above about writing code. \u00a0Personally, I disagree with him. \u00a0Coding it up will check particular examples but you can do that by hand as well. \u00a0</p>\n<p></p>\n<p>More important, is that you actually prove that your recurrence is correct. \u00a0I realize that the word &#34;prove&#34; or &#34;proof&#34; is scary for some of you (for some reason?). \u00a0But it just means you have to explain that here are the different scenarios that can arise and we&#39;re covering all of those cases. \u00a0For example for Problem 6.1. \u00a0 We defined T(i) as the max sum from a substring of a_1,...,a_i which includes a_i. \u00a0Now the proving part is that there are only two cases either the solution to T(i) is just a_i itself or it&#39;s longer. \u00a0If it&#39;s just a_i itself then T(i)=a_i. \u00a0If it&#39;s longer then it has to include a_{i-1} since it&#39;s contiguous elements. \u00a0So we taking a_i with the &#34;best&#34; substring ending at a_{i-1}. \u00a0What&#39;s best mean? \u00a0It&#39;s the substring of a_1,...,a_{i-1} which includes a_{i-1} and which has max sum; this is exactly T(i-1). \u00a0Hence, in this later case T(i)=a_i &#43; T(i-1). \u00a0Therefore, T(i) is the best of the two cases and hence: T(i) = max{a_i,a_i&#43;T(i-1)}.</p>\n<p></p>\n<p>--Eric</p>"
    }
  ], 
  "nr": 45, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "dynamic_programming"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 5, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "dynamic_programming", 
    "student"
  ], 
  "created": "2017-08-23T04:13:45Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145324142, 
  "tag_good": [], 
  "tag_good_arr": [], 
  "history": [
    {
      "content": "<p>So I have spent a ton of time writing all the\u00a0algs\u00a0for the practice problems...I think they are right, but in reality, they are probably wrong.\u00a0Does there exist some tool or something online where I can rewrite it, give it an input, and actually test it so I can see if I got it correct? I can work through step by step, but these problems are rather complex and I lose my footing after a while.</p>", 
      "anon": "no", 
      "created": "2017-08-23T04:13:45Z", 
      "uid": "i4pvwmg5VTb", 
      "subject": "How to check solutions?"
    }
  ]
}