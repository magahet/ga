{
  "status": "active", 
  "unique_views": 165, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-09-11T03:13:23Z", 
      "data": "j7flfywa1oh5aa", 
      "uid": "hv8z1ryhi6h6mi"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-09-11T03:14:05Z", 
      "data": "j7flguug9kx60d", 
      "uid": "hv8z1ryhi6h6mi"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "stud", 
      "when": "2017-09-11T03:21:48Z", 
      "data": "j7flqs7h5nx461", 
      "type": "s_answer"
    }, 
    {
      "type": "s_answer_update", 
      "anon": "stud", 
      "when": "2017-09-11T03:22:04Z", 
      "data": "j7flr4oe57f4d9"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "no", 
      "when": "2017-09-11T12:23:39Z", 
      "type": "followup", 
      "uid": "hv8z1ryhi6h6mi"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "no", 
      "when": "2017-09-11T12:48:19Z", 
      "type": "feedback", 
      "uid": "i4hdvab632i522"
    }, 
    {
      "type": "s_answer_update", 
      "anon": "stud", 
      "when": "2017-09-11T14:27:44Z", 
      "data": "j7g9j67juy72xg"
    }, 
    {
      "type": "s_answer_update", 
      "anon": "stud", 
      "when": "2017-09-11T14:30:37Z", 
      "data": "j7g9mw5b9d56uj"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "no", 
      "when": "2017-09-11T15:10:25Z", 
      "type": "feedback", 
      "uid": "i4nkipeofrkrz"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "no", 
      "when": "2017-09-11T15:53:59Z", 
      "type": "followup", 
      "uid": "hkvhtvraa6x6cg"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "no", 
      "when": "2017-09-13T01:35:09Z", 
      "type": "feedback", 
      "uid": "hv8z1ryhi6h6mi"
    }, 
    {
      "to": "j7flfyw7b5w5a9", 
      "anon": "no", 
      "when": "2017-09-13T08:19:04Z", 
      "type": "feedback", 
      "uid": "i4hdvab632i522"
    }
  ], 
  "upvote_ids": [], 
  "id": "j7flfyw7b5w5a9", 
  "bookmarked": 6, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-11T03:21:48Z", 
      "type": "s_answer", 
      "tag_endorse_arr": [
        "is6gi1lcscq4yp", 
        "hkjzzued3ef4xh", 
        "hv8z1ryhi6h6mi", 
        "ija2ufzr6l0f7"
      ], 
      "id": "j7flqs7dqwo460", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [
        {
          "name": "Nate Craun", 
          "admin": false, 
          "photo": "1471974882_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "is6gi1lcscq4yp"
        }, 
        {
          "name": "Tiancheng Gong", 
          "admin": true, 
          "photo": null, 
          "us": false, 
          "role": "ta", 
          "facebook_id": null, 
          "id": "hkjzzued3ef4xh"
        }, 
        {
          "name": "Kimberly Dorn", 
          "admin": false, 
          "photo": null, 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "hv8z1ryhi6h6mi"
        }, 
        {
          "name": "Di Wang", 
          "admin": false, 
          "photo": "1453179229_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "ija2ufzr6l0f7"
        }
      ], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>aaa and aaabbbccc fails.</p>\n<p></p>\n<p>There exists a\u00a0$$O(n)$$ algorithm (written by Manacher) but it doesn&#39;t use DP.\u00a0</p>", 
          "anon": "stud", 
          "created": "2017-09-11T14:30:37Z", 
          "subject": ""
        }, 
        {
          "content": "<p>aaa fails.</p>\n<p></p>\n<p>There exists a\u00a0$$O(n)$$ algorithm (written by Manacher) but it doesn&#39;t use DP.\u00a0</p>", 
          "anon": "stud", 
          "created": "2017-09-11T14:27:44Z", 
          "subject": ""
        }, 
        {
          "content": "<p>yabbadabba fails.</p>\n<p></p>\n<p>There exists a\u00a0$$O(n)$$ algorithm (written by Manacher) but it doesn&#39;t use DP.\u00a0</p>", 
          "anon": "stud", 
          "created": "2017-09-11T03:22:04Z", 
          "subject": ""
        }, 
        {
          "content": "<p>yabbadabba fails.</p>\n<p></p>\n<p>There exists a\u00a0$O(n)$ algorithm (written by Manacher) but it doesn&#39;t use DP.\u00a0</p>", 
          "anon": "stud", 
          "created": "2017-09-11T03:21:48Z", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "updated": "2017-09-11T12:23:39Z", 
      "no_upvotes": 0, 
      "uid": "hv8z1ryhi6h6mi", 
      "created": "2017-09-11T12:23:39Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7g53lrxmhr2id", 
      "anon": "no", 
      "bucket_name": "This week", 
      "config": {}, 
      "bucket_order": 4, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-09-11T12:48:19Z", 
          "uid": "i4hdvab632i522", 
          "created": "2017-09-11T12:48:19Z", 
          "type": "feedback", 
          "id": "j7g5zc1c9dnaa", 
          "anon": "no", 
          "bucket_name": "This week", 
          "config": {}, 
          "bucket_order": 4, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "aaa"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-11T15:10:25Z", 
          "uid": "i4nkipeofrkrz", 
          "created": "2017-09-11T15:10:25Z", 
          "type": "feedback", 
          "id": "j7gb22fnog42qs", 
          "anon": "no", 
          "bucket_name": "This week", 
          "config": {}, 
          "bucket_order": 4, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>If you try with the input &#34;aaa&#34; it doesn&#39;t work (returns 2, but it should be 3).</p>\n<p></p>\n<p>Look at\u00a0<a href=\"https://en.wikipedia.org/wiki/Longest_palindromic_substring\">https://en.wikipedia.org/wiki/Longest_palindromic_substring</a>\u00a0for an $$O(n)$$ solution to this problem, although it doesn&#39;t use dynamic programming.</p>\n<p></p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-13T01:35:09Z", 
          "uid": "hv8z1ryhi6h6mi", 
          "created": "2017-09-13T01:35:09Z", 
          "type": "feedback", 
          "id": "j7ictbxshm3185", 
          "anon": "no", 
          "bucket_name": "Today", 
          "config": {}, 
          "bucket_order": 2, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Thanks for the feedback!\u00a0 However, switching the &#34;two character palindrome&#34; and &#34;three character palindrome&#34; fixes &#34;aaa&#34; and &#34;aaabbbccc&#34;.</p>\n<p></p>\n<p>My larger point is that you&#39;re either starting a short palindrome or continuing a long one.\u00a0 Intuitively, identifying which it is should only take a small, *fixed* number of checks, along with linear storage.</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-13T08:19:04Z", 
          "uid": "i4hdvab632i522", 
          "created": "2017-09-13T08:19:04Z", 
          "type": "feedback", 
          "id": "j7ir8rnew6l1jp", 
          "anon": "no", 
          "bucket_name": "Today", 
          "config": {}, 
          "bucket_order": 2, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "It&#39;s not as trivial as that; try &#39;abacabacaba&#39; before as well as after swapping around the <tt>elif</tt> clauses"
        }
      ], 
      "subject": "<p>Thanks for the response!\u00a0 However, &#39;yabbadabba&#39; produces 9.\u00a0 Is that not correct?</p>\n<pre>$ python palindrome.py yabbadabba\ny 1\na 1\nb 1\nb 2\na 4\nd 1\na 3\nb 5\nb 7\na 9\n</pre>\n<p></p>"
    }, 
    {
      "folders": [], 
      "updated": "2017-09-11T15:53:59Z", 
      "no_upvotes": 0, 
      "uid": "hkvhtvraa6x6cg", 
      "created": "2017-09-11T15:53:59Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7gcm3gubio3rx", 
      "anon": "no", 
      "bucket_name": "This week", 
      "config": {}, 
      "bucket_order": 4, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "It looks like &#34;aaabbbccc&#34; got my solution as well. \n\nWill we get partial credit on the exams?  For solutions that do use dynamic programming, but the recurrence is incorrect. \n\nI know in my case. I changed my recurrence quite a bit until I thought I handled most of the issues."
    }
  ], 
  "nr": 262, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "hw_solutions1"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 2, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "hw_solutions1", 
    "student"
  ], 
  "created": "2017-09-11T03:13:23Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145259092, 
  "tag_good": [
    {
      "name": "Kyle P Davis", 
      "admin": false, 
      "photo": "1484080691_35.png", 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "idiy4usuxxs"
    }
  ], 
  "tag_good_arr": [
    "idiy4usuxxs"
  ], 
  "history": [
    {
      "content": "<p>Hello, all.\u00a0 I think I&#39;ve found an O(n) solution for finding the length of the longest palindrome.\u00a0 Here it is in python:</p>\n<p></p>\n<pre>def main( s ):\n\n    # Length of longest palindrome ending at character i.\n    l = [1] * len(s)\n\n    for i in range(1,len(s)):\n\n        c = s[i]  # the i-th character\n        p = i-1 - l[i-1]\n\n        if p &gt;= 0 and s[p] == c:\n            # this character extends an existing palindrom\n            l[i] = l[i-1] &#43; 2\n        elif s[i] == s[i-1]:\n            # this is the second half\n            # of a two-letter palindrome\n            l[i] = 2\n        elif i &gt; 1 and s[i] == s[i-2]:\n            # this is the last character\n            # in a three-letter palindrom\n            l[i] = 3\n\n    for i in range(0,len(s)):\n        print s[i], l[i]\n\nif __name__ == &#39;__main__&#39;:\n    import sys\n    main( sys.argv[1] )</pre>\n<p></p>\n<p>You can run it from the comand line like so:</p>\n<pre>$ python palindrom.py abacaba</pre>\n<p></p>\n<p>It will produce output like so:</p>\n<pre>a 1\nb 1\na 3\nc 1\na 3\nb 5\na 7</pre>\n<p></p>\n<p>Am I off base here?</p>", 
      "anon": "no", 
      "created": "2017-09-11T03:14:05Z", 
      "uid": "hv8z1ryhi6h6mi", 
      "subject": "O(n) solution for palindrome?"
    }, 
    {
      "content": "<p>Hello, all.\u00a0 I think I&#39;ve found an O(n) solution for finding the length of the longest palindrome.\u00a0 Here it is in python:</p>\n<p></p>\n<pre>def main( s ):\n\n    # Length of longest palindrome ending at character i.\n    l = [1] * len(s)\n\n    for i in range(1,len(s)):\n\n        c = s[i]  # the i-th character\n        p = i-1 - l[i-1]\n\n        if p &gt;= 0 and s[p] == c:\n            # this character extends an existing palindrom\n            l[i] = l[i-1] &#43; 2\n        elif s[i] == s[i-1]:\n            # this is the second half\n            # of a two-letter palindrome\n            l[i] = 2\n        elif i &gt; 1 and s[i] == s[i-2]:\n            # this is the last character\n            # in a three-letter palindrom\n            l[i] = 3\n\n    for i in range(0,len(s)):\n        print s[i], l[i]\n\nif __name__ == &#39;__main__&#39;:\n    import sys\n    main( sys.argv[1] )</pre>\n<p></p>\n<p>You can run it from the comand line like so:</p>\n<pre>$ python palindrom.py abacaba</pre>\n<p></p>\n<p>Am I off base here?</p>", 
      "anon": "no", 
      "created": "2017-09-11T03:13:23Z", 
      "uid": "hv8z1ryhi6h6mi", 
      "subject": "O(n) solution for palindrome?"
    }
  ]
}