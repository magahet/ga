{
  "status": "active", 
  "unique_views": 185, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-09-04T12:07:42Z", 
      "data": "j764g53fb4n4gt", 
      "uid": "i8597qyse9c1v2"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-09-04T12:08:01Z", 
      "data": "j764gjl1jva4u0", 
      "uid": "i8597qyse9c1v2"
    }, 
    {
      "uid": "ija2ufzr6l0f7", 
      "type": "s_answer", 
      "when": "2017-09-04T13:24:28Z", 
      "to": "j764g53a98y4gs", 
      "anon": "no", 
      "data": "j7676uxrfir7j9"
    }, 
    {
      "uid": "isgwdf47kb42f", 
      "type": "i_answer", 
      "when": "2017-09-04T13:42:36Z", 
      "to": "j764g53a98y4gs", 
      "anon": "no", 
      "data": "j767u64qk76ps"
    }, 
    {
      "type": "i_answer_update", 
      "anon": "no", 
      "when": "2017-09-04T13:51:37Z", 
      "data": "j7685rz026v278", 
      "uid": "isgwdf47kb42f"
    }, 
    {
      "to": "j764g53a98y4gs", 
      "anon": "no", 
      "when": "2017-09-04T19:55:30Z", 
      "type": "followup", 
      "uid": "gy4twfv45cg5o6"
    }, 
    {
      "to": "j764g53a98y4gs", 
      "anon": "no", 
      "when": "2017-09-05T06:44:01Z", 
      "type": "feedback", 
      "uid": "i4hdvab632i522"
    }, 
    {
      "to": "j764g53a98y4gs", 
      "anon": "no", 
      "when": "2017-09-05T12:11:14Z", 
      "type": "followup", 
      "uid": "gy4twfv45cg5o6"
    }, 
    {
      "to": "j764g53a98y4gs", 
      "anon": "no", 
      "when": "2017-09-11T20:08:15Z", 
      "type": "feedback", 
      "uid": "i4m49pmqc4h14p"
    }
  ], 
  "upvote_ids": [], 
  "id": "j764g53a98y4gs", 
  "bookmarked": 7, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-04T13:24:28Z", 
      "type": "s_answer", 
      "tag_endorse_arr": [], 
      "id": "j7676uxpgze7j8", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>Is it a must for y !=m ?</p>", 
          "anon": "no", 
          "created": "2017-09-04T13:24:28Z", 
          "uid": "ija2ufzr6l0f7", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-04T13:42:36Z", 
      "type": "i_answer", 
      "tag_endorse_arr": [
        "i8597qyse9c1v2", 
        "ija2ufzr6l0f7"
      ], 
      "id": "j767u64pp406pr", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [
        {
          "name": "Pedro Henrique Rocha Moy", 
          "admin": false, 
          "photo": "1452626521_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i8597qyse9c1v2"
        }, 
        {
          "name": "Di Wang", 
          "admin": false, 
          "photo": "1453179229_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "ija2ufzr6l0f7"
        }
      ], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>Note that 55 is equivalent to 0 mod N. Using a message &gt; 55 will return the message mod 55, not the original message. The message space mod N is {0,N-1}.</p>\n<p></p>\n<p>It is possible for a message m to be encrypted with valid choices for e,d, and N such that m^e is equivalent to m mod N, which is what&#39;s happening in the &#34;false&#34; results below 55. 0 and 1 are trivial examples of this and generally the message would be padded so 0 and 1 would not be used as messages. Also note that (N-1) is equivalent to -1 mod N, so (N-1)^e would be equivalent to N-1 for any odd exponent. Since we require e to be relatively prime to\u00a0\u03a6(N), e can&#39;t be even since\u00a0\u03a6(N) is even for all N&gt;1.</p>\n<p></p>\n<p>The case where m is neither 0 nor 1 but m^e is still equivalent to m mod N is rare, especially for large N.</p>\n<p></p>\n<p>In your example, note that:</p>\n<p></p>\n<p>$$10 \\equiv 0 \\mod 5 \\\\\n10 \\equiv -1 \\mod 11 \\\\\n11 \\equiv 1 \\mod 5 \\\\\n11 \\equiv 0 \\mod 11 \\\\\n21 \\equiv 1 \\mod 5 \\\\\n21 \\equiv -1 \\mod 11 \\\\\n34 \\equiv -1 \\mod 5 \\\\\n34 \\equiv 1 \\mod 11 \\\\\n44 \\equiv -1 \\mod 5 \\\\\n44 \\equiv 0 \\mod 11 \\\\\n45 \\equiv 1 \\mod 11 \\\\\n54 \\equiv -1 \\mod 5 \\\\\n54 \\equiv -1 \\mod 11 \\\\$$</p>\n<p></p>\n<p>The odds of m being\u00a0equivalent to 1, 0, or -1 mod p and mod q are low in actual implementations of RSA where the primes are upwards of 1000 bits.</p>", 
          "anon": "no", 
          "created": "2017-09-04T13:51:37Z", 
          "uid": "isgwdf47kb42f", 
          "subject": ""
        }, 
        {
          "content": "<p>Note that 55 is equivalent to 0 mod N. Using a message &gt; 55 will return the message mod 55, not the original message. The message space mod N is {0,N-1}.</p>\n<p></p>\n<p>It is possible for a message m to be encrypted with valid choices for e,d, and N such that m^e is equivalent to m mod N, which is what&#39;s happening in the &#34;false&#34; results below 55. 0 and 1 are trivial examples of this and generally the message would be padded so 0 and 1 would not be used as messages. Also note that (N-1) is equivalent to -1 mod N, so (N-1)^e would be equivalent to N-1 for any odd exponent. Since we require e to be relatively prime to\u00a0\u03a6(N), e can&#39;t be even since\u00a0\u03a6(N) is even for all N&gt;1.</p>\n<p></p>\n<p>The case where m is neither 0 nor 1 but m^e is still equivalent to m mod N is rare, especially for large N.</p>\n<p></p>\n<p>In your example, note that:</p>\n<p></p>\n<p>$$10 \\equiv 0 \\mod 5 \\\\\n10 \\equiv -1 \\mod 11 \\\\\n11 \\equiv 1 \\mod 5 \\\\\n11 \\equiv 0 \\mod 11 \\\\\n21 \\equiv 1 \\mod 5 \\\\\n21 \\equiv -1 \\mod 11 \\\\\n34 \\equiv -1 \\mod 5 \\\\\n34 \\equiv 1 \\mod 11 \\\\\n44 \\equiv -1 \\mod 5 \\\\\n44 \\equiv 0 \\mod 11 \\\\\n45 \\equiv 0 \\mod 5 \\\\\n45 \\equiv 1 \\mod 11 \\\\\n54 \\equiv -1 \\mod 5 \\\\\n54 \\equiv -1 \\mod 11 \\\\$$</p>\n<p></p>\n<p>The case where m is (non-trivially) equivalent to 1, 0, or -1 mod p and mod q is rare in actual implementations of RSA where the primes are upwards of 1000 bits.</p>", 
          "anon": "no", 
          "created": "2017-09-04T13:42:36Z", 
          "uid": "isgwdf47kb42f", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "updated": "2017-09-04T19:55:30Z", 
      "no_upvotes": 0, 
      "uid": "gy4twfv45cg5o6", 
      "created": "2017-09-04T19:55:30Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j76l5pyrhych", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-09-05T06:44:01Z", 
          "uid": "i4hdvab632i522", 
          "created": "2017-09-05T06:44:01Z", 
          "type": "feedback", 
          "id": "j778bqk6zde13c", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "The reason is that $$10^3\\!\\! \\mod 55 = 10$$; it&#39;s not so much a failure of the encryption, as a potential failure of security (although Michael&#39;s answer seems to address the fact that such a result would be highly improbable with a realistic message)"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-11T20:08:15Z", 
          "uid": "i4m49pmqc4h14p", 
          "created": "2017-09-11T20:08:15Z", 
          "type": "feedback", 
          "id": "j7glp39ecjg26g", 
          "anon": "no", 
          "bucket_name": "Today", 
          "config": {}, 
          "bucket_order": 2, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Sooo....</p>\n<p>m mod N = y mod N</p>\n<p></p>\n<p>Thus the message isn&#39;t really encrypted. This is why it&#39;s marked as False.</p>"
        }
      ], 
      "subject": "<p></p>\n<p>You must have a bug in your program.</p>\n<p>For example: 10^{81} mod 55 = 10. \u00a0So not sure why you said False.</p>"
    }, 
    {
      "folders": [], 
      "updated": "2017-09-05T12:11:14Z", 
      "no_upvotes": 0, 
      "uid": "gy4twfv45cg5o6", 
      "created": "2017-09-05T12:11:14Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j77k0jbeimh19r", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p></p>\n<p>For the question:\u00a0Is it a must for y !=m?</p>\n<p>No. \u00a0If $$y=m$$ then $$y mod m = 0$$ and $$y^{de} mod m = 0$$. \u00a0So it works as well.</p>"
    }
  ], 
  "nr": 168, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "hw2"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 4, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "hw2", 
    "student"
  ], 
  "created": "2017-09-04T12:07:42Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145284681, 
  "tag_good": [], 
  "tag_good_arr": [], 
  "history": [
    {
      "content": "<p>So I tested the RSA for a range of messages to check that it works, and for those messages &#34;m&#34; below that returned False, it did not work in that the encrypted message resulted in the message itself. Am I doing something wrong? This is an example from the book. After 55, it&#39;s all False.</p>\n<p></p>\n<pre>e = 3\nd = 27\nN = 55 #(5 * 11)\nfor m in range(56):\n    y = m ** e % N\n    x = y ** d % N\n    print m,y!=m and x==m #this says the encryption is different than the message\n\n0 False\n1 False\n2 True\n3 True\n4 True\n5 True\n6 True\n7 True\n8 True\n9 True\n10 False\n11 False\n12 True\n13 True\n14 True\n15 True\n16 True\n17 True\n18 True\n19 True\n20 True\n21 False\n22 True\n23 True\n24 True\n25 True\n26 True\n27 True\n28 True\n29 True\n30 True\n31 True\n32 True\n33 True\n34 False\n35 True\n36 True\n37 True\n38 True\n39 True\n40 True\n41 True\n42 True\n43 True\n44 False\n45 False\n46 True\n47 True\n48 True\n49 True\n50 True\n51 True\n52 True\n53 True\n54 False\n55 False\n\n</pre>\n<p></p>", 
      "anon": "no", 
      "created": "2017-09-04T12:08:01Z", 
      "uid": "i8597qyse9c1v2", 
      "subject": "Messages for which RSA do not appear to work"
    }, 
    {
      "content": "<p>So I tested the RSA for a range of messages to check that it works, and for those messages &#34;m&#34; below that returned False, it did not work in that the encrypted message resulted in the message itself. Am I doing something wrong? This is an example from the book. After 55, it&#39;s all False.</p>\n<p></p>\n<pre>e = 3<br />d = 27<br />N = 55 #(5 * 11)<br />for m in range(56):<br />    y = m ** e % N<br />    x = y ** d % N<br />    print m,y!=m and x==m #this says the encryption is different than the message<br /><br />0 False\n1 False\n2 True\n3 True\n4 True\n5 True\n6 True\n7 True\n8 True\n9 True\n10 False\n11 False\n12 True\n13 True\n14 True\n15 True\n16 True\n17 True\n18 True\n19 True\n20 True\n21 False\n22 True\n23 True\n24 True\n25 True\n26 True\n27 True\n28 True\n29 True\n30 True\n31 True\n32 True\n33 True\n34 False\n35 True\n36 True\n37 True\n38 True\n39 True\n40 True\n41 True\n42 True\n43 True\n44 False\n45 False\n46 True\n47 True\n48 True\n49 True\n50 True\n51 True\n52 True\n53 True\n54 False\n55 False<br /><br /></pre>\n<p></p>", 
      "anon": "no", 
      "created": "2017-09-04T12:07:42Z", 
      "uid": "i8597qyse9c1v2", 
      "subject": "Messages for which RSA does not appear to work"
    }
  ]
}