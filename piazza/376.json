{
  "status": "active", 
  "unique_views": 216, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-09-21T19:01:39Z", 
      "data": "j7utpyekdb72un", 
      "uid": "i4nkipeofrkrz"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T19:04:06Z", 
      "type": "followup", 
      "uid": "i4nkipeofrkrz"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T20:00:16Z", 
      "type": "followup", 
      "uid": "iddoy2bdneb2tv"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T20:18:00Z", 
      "type": "feedback", 
      "uid": "hq8hn0qyfuvyr"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T20:26:42Z", 
      "type": "feedback", 
      "uid": "ig9fx44bzwr74x"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T20:28:03Z", 
      "type": "feedback", 
      "uid": "hq8hn0qyfuvyr"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T20:30:32Z", 
      "type": "feedback", 
      "uid": "iddoy2bdneb2tv"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-21T21:30:13Z", 
      "type": "feedback", 
      "uid": "hq9zldy4rr4w1"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-22T00:53:58Z", 
      "type": "feedback", 
      "uid": "i4nkipeofrkrz"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-22T00:55:25Z", 
      "type": "followup", 
      "uid": "i4g1simdqek6ey"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-22T01:35:20Z", 
      "type": "feedback", 
      "uid": "i4g1simdqek6ey"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-22T02:50:28Z", 
      "type": "feedback", 
      "uid": "iddoy2bdneb2tv"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-22T03:04:42Z", 
      "type": "feedback", 
      "uid": "i4nkipeofrkrz"
    }, 
    {
      "uid": "i4iys7m3lpq2ij", 
      "type": "s_answer", 
      "when": "2017-09-26T13:48:18Z", 
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "data": "j81nq8x1xrf4fu"
    }, 
    {
      "to": "j7utpyehppp2um", 
      "anon": "no", 
      "when": "2017-09-28T15:14:43Z", 
      "type": "feedback", 
      "uid": "hqa65fnalg83fr"
    }
  ], 
  "upvote_ids": [], 
  "id": "j7utpyehppp2um", 
  "bookmarked": 11, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "updated": "2017-09-21T19:04:06Z", 
      "no_upvotes": 0, 
      "uid": "i4nkipeofrkrz", 
      "created": "2017-09-21T19:04:06Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7utt3yf4vn2mr", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-09-21T20:18:00Z", 
          "uid": "hq8hn0qyfuvyr", 
          "created": "2017-09-21T20:18:00Z", 
          "type": "feedback", 
          "id": "j7uwg5imvhs7f6", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>This one could also be extended to having more than 2 subsets. In that case, the goal would be to minimize the sum of the differences between each subset total and the average per subset.</p>"
        }
      ], 
      "subject": "<p><strong>Minimum Partition</strong></p>\n<p>Given a set of integers, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum.</p>\n<p>If there is a set S with n elements, then if we assume Subset1 has m elements, Subset2 must have n-m elements and the value of abs(sum(Subset1) \u2013 sum(Subset2)) should be minimum.</p>\n<p></p>\n<p>Write a DP program that returns the minimum sum achievable.</p>"
    }, 
    {
      "folders": [], 
      "updated": "2017-09-21T20:00:16Z", 
      "no_upvotes": 0, 
      "uid": "iddoy2bdneb2tv", 
      "created": "2017-09-21T20:00:16Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7uvtcnpd4o4lc", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-09-21T20:26:42Z", 
          "uid": "ig9fx44bzwr74x", 
          "created": "2017-09-21T20:26:42Z", 
          "type": "feedback", 
          "id": "j7uwrc61zlp1kb", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>should k=42 in your second example?</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-21T20:28:03Z", 
          "uid": "hq8hn0qyfuvyr", 
          "created": "2017-09-21T20:28:03Z", 
          "type": "feedback", 
          "id": "j7uwt2m2phg156", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>You could alter this problem by changing the operation from addition to multiplication. In other words, ask for a product that&#39;s a multiple of k, rather than a sum. The algorithm could be almost\u00a0the same.</p>\n<p></p>\n<p>However, there are some operations for which a very different algorithm would be necessary. So here&#39;s an interesting question: What characteristic must the operation have in order to use almost the same algorithm as for the problem given above?</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-21T20:30:32Z", 
          "uid": "iddoy2bdneb2tv", 
          "created": "2017-09-21T20:30:32Z", 
          "type": "feedback", 
          "id": "j7uww971bob6ff", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Colin k will still be 6. Recall 42 is 6* 7</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-21T21:30:13Z", 
          "uid": "hq9zldy4rr4w1", 
          "created": "2017-09-21T21:30:13Z", 
          "type": "feedback", 
          "id": "j7uz10rp92d679", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>For the first Example, when you are at element i and A[i] &lt; k, then to compute the subset A[1.. ,i-1] to get k-A[i], can you actually traverse back through the elements i--1 back to 1?</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-22T00:53:57Z", 
          "uid": "i4nkipeofrkrz", 
          "created": "2017-09-22T00:53:57Z", 
          "type": "feedback", 
          "id": "j7v6b14dhto3b8", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Here is one possible solution to this problem:</p>\n<p></p>\n<p>Let $$T(i, j)$$ be the sum of the subarray $$(i \\dots j)$$ and $$S(i)$$ be TRUE if there&#39;s a subarray in $$(1 \\dots i)$$ with a sum multiple of $$k$$, or FALSE otherwise.</p>\n<p></p>\n<p>$$T(i,j) = \\begin{cases}\n &amp; x_i &#43; x_j : \\forall j \\in (i &#43; 1 \\dots n), j - i = 1 \\\\ \n &amp; x_j &#43; T(j - 1) : \\forall j \\in (i &#43; 1 \\dots n), j - i &gt; 1\n\\end{cases}$$</p>\n<p></p>\n<p>$$S(i) = \\bigvee_{1 \\leq j \\leq i}(T(1, j) \\mod k = 0)$$</p>\n<p></p>\n<p></p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-22T01:35:20Z", 
          "uid": "i4g1simdqek6ey", 
          "created": "2017-09-22T01:35:20Z", 
          "type": "feedback", 
          "id": "j7v7s8w66nj1xq", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Disregard this edited solution. My solution was too slow.</p>\n<p></p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-22T02:50:28Z", 
          "uid": "iddoy2bdneb2tv", 
          "created": "2017-09-22T02:50:28Z", 
          "type": "feedback", 
          "id": "j7vagvbeqyl719", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Santiago, I have T(i, j) = 1 &#43; T(i - 1, j - xi): if xi &lt;= j. Otherwise 0. I did this similar to Knapsack with coin change. J is 0 to the max sum. T(i, j) is the length of the size of the array if we are accepting xi. At the end we are checking\u00a0the if there is a length greater than 1 and if j % 6 = 0.\u00a0</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-09-22T03:04:42Z", 
          "uid": "i4nkipeofrkrz", 
          "created": "2017-09-22T03:04:42Z", 
          "type": "feedback", 
          "id": "j7vaz5xjht54d3", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>That was clever, Jesse! The only drawback is that this solution is pseudo-polynomial $$O(nS)$$. However, it is very straightforward. I spent too much time in my solution above and never occurred to me that knapsack was a beautiful way.</p>"
        }
      ], 
      "subject": "<p>Santiago this is a good idea. Thanks for this. I found one that is really good too.\u00a0</p>\n<p></p>\n<div></div>\n<div>\n<p></p>\n<p>Given a list of\u00a0non-negative\u00a0numbers and a target\u00a0integer\u00a0k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of\u00a0k, that is, sums up to n*k where n is also an\u00a0integer.</p>\n<p>Example 1:</p>\n<pre>Input: [23, 2, 4, 6, 7],  k=6\nOutput: True\nExplanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\n</pre>\n<p></p>\n<p>Example 2:</p>\n<pre>Input: [23, 2, 6, 4, 7],  k=6\nOutput: True\nExplanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.</pre>\n</div>"
    }, 
    {
      "folders": [], 
      "updated": "2017-09-22T00:55:25Z", 
      "no_upvotes": 0, 
      "uid": "i4g1simdqek6ey", 
      "created": "2017-09-22T00:55:25Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7v6cwyo18i33o", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-09-28T15:14:43Z", 
          "uid": "hqa65fnalg83fr", 
          "created": "2017-09-28T15:14:43Z", 
          "type": "feedback", 
          "id": "j84lp39bdtj163", 
          "anon": "no", 
          "bucket_name": "Today", 
          "config": {}, 
          "bucket_order": 2, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>hmm.. this looks like\u00a0a job for Dikjstra&#39;s algorithm.\u00a0</p>"
        }
      ], 
      "subject": "<p>For people looking a simple, warm-up problem, I thought #3 from\u00a0<a href=\"http://www.cs.wustl.edu/~sg/CSE441_FL04/hw2-practice.pdf\">http://www.cs.wustl.edu/~sg/CSE441_FL04/hw2-practice.pdf</a>\u00a0was a good example.</p>\n<p></p>\n<p>You are traveling by a canoe down a river and there are n trading posts along the way. Before starting your journey, you are given for each$$1 \\leq i &lt; j \\leq n$$, the fee\u00a0$$f_{i,j}$$ for renting a canoe from post i to post j. These fees are arbitrary. For example it is possible that $$f_{1,3} = 10$$ and $$f_{1,4}= 5$$\u00a0. You begin at trading post 1 and must end at trading post n (using rented canoes). Your goal is to minimize the rental cost.</p>\n<p></p>\n<p></p>"
    }, 
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-26T13:48:18Z", 
      "type": "s_answer", 
      "tag_endorse_arr": [], 
      "id": "j81nq8wxz864ft", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>Resolved, discussion below.</p>", 
          "anon": "no", 
          "created": "2017-09-26T13:48:18Z", 
          "uid": "i4iys7m3lpq2ij", 
          "subject": ""
        }
      ]
    }
  ], 
  "nr": 376, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "dynamic_programming", 
    "exam"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 9, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "dynamic_programming", 
    "exam", 
    "student"
  ], 
  "created": "2017-09-21T19:01:39Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145224252, 
  "tag_good": [], 
  "tag_good_arr": [], 
  "history": [
    {
      "content": "<p>What problems are you using as a practice for the exam? I&#39;m referring to problems that were not assigned in class.</p>\n<p></p>\n<p>Do you mind sharing them with the rest of the class so we all have more to practice?</p>\n<p></p>\n<p>Thanks</p>", 
      "anon": "no", 
      "created": "2017-09-21T19:01:39Z", 
      "uid": "i4nkipeofrkrz", 
      "subject": "What Dynamic Programming problems are you solving?"
    }
  ]
}