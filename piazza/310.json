{
  "status": "active", 
  "unique_views": 174, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-09-15T05:03:00Z", 
      "data": "j7lf4bvrfyw1p5", 
      "uid": "i8597qyse9c1v2"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-09-15T05:31:48Z", 
      "data": "j7lg5dcga9a5rs", 
      "uid": "i8597qyse9c1v2"
    }, 
    {
      "uid": "gy4twfv45cg5o6", 
      "type": "i_answer", 
      "when": "2017-09-15T12:53:41Z", 
      "to": "j7lf4bvo8g51p4", 
      "anon": "no", 
      "data": "j7lvxmocwlw59y"
    }, 
    {
      "to": "j7lf4bvo8g51p4", 
      "anon": "no", 
      "when": "2017-09-16T04:40:12Z", 
      "type": "followup", 
      "uid": "idg5nm2lC96"
    }
  ], 
  "upvote_ids": [], 
  "id": "j7lf4bvo8g51p4", 
  "bookmarked": 4, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-09-15T12:53:40Z", 
      "type": "i_answer", 
      "tag_endorse_arr": [
        "hyzyc8nwswo6z5"
      ], 
      "id": "j7lvxmo5cnl59x", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [
        {
          "name": "Zack Gow", 
          "admin": false, 
          "photo": "1476241357_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "hyzyc8nwswo6z5"
        }
      ], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p></p>\n<p>Good question, thanks for asking. \u00a0You don&#39;t need to solve the recurrences, just point out whether or not the sum of the coefficients is &lt;1 or \\geq 1. \u00a0</p>\n<p></p>\n<p>I&#39;m glad you appreciate the algorithm. \u00a0Such a clever approach, that&#39;s why I love teaching it in class (a little harder to get excited in a recorded video). \u00a0The story is that they came up with this algorithm over lunch. \u00a0I don&#39;t know other examples like this where they utilize the slack in such a way \u00a0-- if anyone knows of such examples I&#39;d be interested to hear too. \u00a0 --Eric</p>", 
          "anon": "no", 
          "created": "2017-09-15T12:53:41Z", 
          "uid": "gy4twfv45cg5o6", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "updated": "2017-09-16T04:40:12Z", 
      "no_upvotes": 0, 
      "uid": "idg5nm2lC96", 
      "created": "2017-09-16T04:40:12Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j7mtqv6v2u047o", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p>I feel like the word &#34;clever&#34; is not strong enough. Finding the $$k$$-th smallest element of an unsorted list of numbers has an embedded finding $$p$$ that is of the same type of problem as the original problem. It&#39;s difficult to imagine\u00a0how anybody can come up with anything like that (over lunch). Other algorithms are clever\u00a0too, but this one seems so simple enough that it&#39;s within grasp, and yet somehow is still so far away.</p>"
    }
  ], 
  "nr": 310, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "hw3"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 1, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "hw3", 
    "student"
  ], 
  "created": "2017-09-15T05:03:00Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145243635, 
  "tag_good": [
    {
      "name": "Nelson Cheng", 
      "admin": false, 
      "photo": null, 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "i4kxfs7hlxngu"
    }
  ], 
  "tag_good_arr": [
    "i4kxfs7hlxngu"
  ], 
  "history": [
    {
      "content": "<p>As said in the lecture, we want to make sure we end up with the sum of coefficients of the recursive calls less than 1 such that we retain linear time. On the homework, I eluded to that and ended up getting as far as having to show that the series (for each case) would either converge to a constant or to something greater than a constant (in this case we would not have linear time). Is this about the right approach for this problem? Because this does not seem the easy way (indeed I did not show what the series converges to, I only stated it). In general, this trick of leveraging the slack to do additional work and getting away with the same time complexity seems very useful and I would love to get a better understanding here regarding the time complexity.</p>", 
      "anon": "no", 
      "created": "2017-09-15T05:31:48Z", 
      "uid": "i8597qyse9c1v2", 
      "subject": "Problem 5"
    }, 
    {
      "content": "<p>As said in the lecture, we want to make sure we end up with the sum of coefficients of the recursive calls less than 1 such that we retain linear time. On the homework, I eluded to that and ended up getting as far as having to show that the series (for each case) would either converge to a constant or to something greater than a constant (in this case we would not have linear time). Is this about the right approach for this problem? Because this does not seem the easy way (indeed I did not show what the series converges to, I only stated it).</p>", 
      "anon": "no", 
      "created": "2017-09-15T05:03:00Z", 
      "uid": "i8597qyse9c1v2", 
      "subject": "Problem 5"
    }
  ]
}