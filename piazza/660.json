{
  "status": "active", 
  "unique_views": 141, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-10-07T20:36:49Z", 
      "data": "j8hs5zbu4uv3kq", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:37:14Z", 
      "data": "j8hs6ifhax13vs", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:38:53Z", 
      "data": "j8hs8mf36vx4xs", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:39:04Z", 
      "data": "j8hs8v3edfm52j", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:40:27Z", 
      "data": "j8hsamzp86c6sj", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:41:50Z", 
      "data": "j8hscfb4xg716j", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:43:32Z", 
      "data": "j8hselvdmax2ny", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:44:50Z", 
      "data": "j8hsgakm61n3lc", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "type": "update", 
      "anon": "no", 
      "when": "2017-10-07T20:46:21Z", 
      "data": "j8hsi8sjagw46l", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "uid": "idg5nm2lC96", 
      "type": "s_answer", 
      "when": "2017-10-07T22:34:49Z", 
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "data": "j8hwdpr0srb11f"
    }, 
    {
      "type": "s_answer_update", 
      "anon": "no", 
      "when": "2017-10-07T22:36:51Z", 
      "data": "j8hwgc31pii6cg", 
      "uid": "idg5nm2lC96"
    }, 
    {
      "type": "s_answer_update", 
      "anon": "no", 
      "when": "2017-10-07T22:37:46Z", 
      "data": "j8hwhitnx5976j", 
      "uid": "idg5nm2lC96"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-07T23:11:43Z", 
      "type": "followup", 
      "uid": "i4iys7m3lpq2ij"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T07:40:09Z", 
      "type": "feedback", 
      "uid": "idg5nm2lC96"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T10:19:32Z", 
      "type": "feedback", 
      "uid": "i4hdvab632i522"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T14:24:58Z", 
      "type": "feedback", 
      "uid": "idg5nm2lC96"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T15:28:39Z", 
      "type": "feedback", 
      "uid": "i18w67avy8e1uk"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T16:11:01Z", 
      "type": "feedback", 
      "uid": "i4iys7m3lpq2ij"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T16:19:52Z", 
      "type": "feedback", 
      "uid": "i18w67avy8e1uk"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T16:36:04Z", 
      "type": "feedback", 
      "uid": "i4iys7m3lpq2ij"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T17:51:54Z", 
      "type": "feedback", 
      "uid": "idg5nm2lC96"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-09T17:59:50Z", 
      "type": "feedback", 
      "uid": "i4iys7m3lpq2ij"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-10T20:58:49Z", 
      "type": "followup", 
      "uid": "hvil6y6khgk2ri"
    }, 
    {
      "to": "j8hs5zbs63w3kp", 
      "anon": "no", 
      "when": "2017-10-15T21:48:37Z", 
      "type": "feedback", 
      "uid": "hq8hn0qyfuvyr"
    }
  ], 
  "upvote_ids": [], 
  "id": "j8hs5zbs63w3kp", 
  "bookmarked": 7, 
  "no_answer": 0, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "is_tag_endorse": false, 
      "created": "2017-10-07T22:34:49Z", 
      "type": "s_answer", 
      "tag_endorse_arr": [
        "i4iys7m3lpq2ij", 
        "i18w67avy8e1uk"
      ], 
      "id": "j8hwdpqwr5b11e", 
      "bucket_name": "Today", 
      "config": {}, 
      "tag_endorse": [
        {
          "name": "Kate Alpert", 
          "admin": false, 
          "photo": "1488584881_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i4iys7m3lpq2ij"
        }, 
        {
          "name": "Shihgian Lee", 
          "admin": false, 
          "photo": "1420394909_35.png", 
          "us": false, 
          "role": "student", 
          "facebook_id": null, 
          "id": "i18w67avy8e1uk"
        }
      ], 
      "bucket_order": 2, 
      "data": {
        "embed_links": []
      }, 
      "children": [], 
      "history": [
        {
          "content": "<p>I think the point of that video is this: if we set the sink SCC $$S$$ to true (i.e. set $$\\overline{x_3} = T$$ and $$x_1 = T$$), then we can remove $$S$$ from the graph. However, by setting $$S$$ to true, we&#39;re setting $$\\overline{S}$$ to false. This is okay as long as there are\u00a0no edges coming into $$\\overline{S}$$, otherwise we would run into a contradiction: following the edges into an SCC implies that that SCC is true, but as we just said, $$\\overline{S}$$ is false. In other words, setting $$S$$ to true, which allows us to remove $$S$$, is okay as long as $$\\overline{S}$$ is a source SCC.</p>\n<p></p>\n<p>Later, as the professor claims, it turns out that whenever\u00a0$$x_i$$ and $$\\overline{x_i}$$ are in different SCCs, if $$S$$ is a sink SCC $$\\Longleftrightarrow \\overline{S}$$ is a\u00a0source SCC. And so, setting $$S$$ to true and then removing it is okay after all, and is equivalent to setting $$\\overline{S}$$ to false and then removing $$\\overline{S}$$. Hope this helps!</p>", 
          "anon": "no", 
          "created": "2017-10-07T22:37:46Z", 
          "uid": "idg5nm2lC96", 
          "subject": ""
        }, 
        {
          "content": "<p>I think the point of that video is this: if we set the sink SCC $$S$$ to true (i.e. set $$\\overline{x_3} = T$$ and $$x_1 = T$$), then we can remove $$S$$ from the graph. However, by setting $$S$$ to true, we&#39;re setting $$\\overline{S}$$ to false. This is okay as long as there are\u00a0no edges coming into $$\\overline{S}$$, otherwise we would run into a contradiction: following the edges into an SCC implies that that SCC is true, but as we just said, $$\\overline{S}$$ is false. In other words, setting $$S$$ to true, which allows us to remove $$S$$, is okay as long as $$\\overline{S}$$ is a source SCC.</p>\n<p></p>\n<p>Later, as the professor claims, it turns out that whenever\u00a0$$x_i$$ and $$\\overline{x_i}$$ are in different SCCs, if $$S$$ is a sink SCC $$\\Longleftrightarrow \\overline{S}$$ is a\u00a0source SCC. And so, setting $$S$$ to true and removing it is okay after all, and is equivalent to setting $$\\overline{S}$$ and removing $$\\overline{S}$$. Hope this helps!</p>", 
          "anon": "no", 
          "created": "2017-10-07T22:36:51Z", 
          "uid": "idg5nm2lC96", 
          "subject": ""
        }, 
        {
          "content": "<p>I think the point of that video is this: if we set the sink SCC $$S$$ to true (i.e. set $$\\overline{x_3} = T$$ and $$x_1 = T$$), then we can remove $$S$$ from the graph. However, by setting $$S$$ to true, we&#39;re setting $$\\overline{S}$$ to false. This is okay as long as there are on edges coming into $$\\overline{S}$$, otherwise we would run into a contradiction: following the edges into an SCC implies that that SCC is true, but as we just said, $$\\overline{S}$$ is false. In other words, setting $$S$$ to true, which allows us to remove $$S$$, is okay as long as $$\\overline{S}$$ is a source SCC.</p>\n<p></p>\n<p>Later, as the professor claims, it turns out that whenever\u00a0$$x_i$$ and $$\\overline{x_i}$$ are in different SCCs, if $$S$$ is a sink SCC $$\\Longleftrightarrow \\overline{S}$$ is a\u00a0source SCC. And so, setting $$S$$ to true and removing it is okay after all, and is equivalent to setting $$\\overline{S}$$ and removing it. Hope this helps!</p>", 
          "anon": "no", 
          "created": "2017-10-07T22:34:49Z", 
          "uid": "idg5nm2lC96", 
          "subject": ""
        }
      ]
    }, 
    {
      "folders": [], 
      "updated": "2017-10-07T23:11:43Z", 
      "no_upvotes": 0, 
      "uid": "i4iys7m3lpq2ij", 
      "created": "2017-10-07T23:11:43Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j8hxp6a3v4w1ru", 
      "anon": "no", 
      "bucket_name": "Week 10/1 - 10/7", 
      "config": {}, 
      "bucket_order": 7, 
      "data": {
        "embed_links": null
      }, 
      "children": [
        {
          "folders": [], 
          "updated": "2017-10-09T07:40:09Z", 
          "uid": "idg5nm2lC96", 
          "created": "2017-10-09T07:40:09Z", 
          "type": "feedback", 
          "id": "j8jvavi5qao3ff", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>On identifying the SCCs: I understood it that way as well. On each SCC having one literal: Here&#39;s a silly example that I came up with that seems to\u00a0have multiple literals $$(\\overline{x_1} \\lor \\overline{x_2}) \\land (x_2 \\lor x_1) \\land (x_2 \\lor x_3) \\land (\\overline{x_3} \\lor \\overline{x_2})$$. It took me a while to come up with that :). Could you please check if it works?\u00a0</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T10:19:32Z", 
          "uid": "i4hdvab632i522", 
          "created": "2017-10-09T10:19:32Z", 
          "type": "feedback", 
          "id": "j8k0zugiqdy6q6", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "Dennis, that&#39;s a bit degenerate as the graph it produces contains unlinked SCCs\n<img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/j6f5zm92gj34gi/i4hdvab632i522/j8k1ja64cutx/degenerate_2sat.png\" alt=\"\" />\nSo you could pick either the upper component as the sink, setting $$x_1 = \\overline{x_2} = x_3 =$$ True, giving TFT, or the lower component, setting $$\\overline{x_1} = x_2 = \\overline{x_3} =$$ True, giving FTF; either way satisfies $$(\\overline{x_1} \\vee \\overline{x_2}) \\wedge (x_1 \\vee x_2) \\wedge (x_2 \\vee x_3) \\wedge (\\overline{x_2} \\vee \\overline{x_3})$$"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T14:24:58Z", 
          "uid": "idg5nm2lC96", 
          "created": "2017-10-09T14:24:58Z", 
          "type": "feedback", 
          "id": "j8k9rhij4qv1hi", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Is there anything wrong with unlinked SCCs? You can add $$\\overline{x_3} \\lor x_2$$ if you want them linked.</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T15:28:39Z", 
          "uid": "i18w67avy8e1uk", 
          "created": "2017-10-09T15:28:39Z", 
          "type": "feedback", 
          "id": "j8kc1doe946tf", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>I am a bit confused. From the lecture, I thought there\u00a0is 2 literals in\u00a0each SCC for 2-SAT problem. Am I missing something?</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T16:11:01Z", 
          "uid": "i4iys7m3lpq2ij", 
          "created": "2017-10-09T16:11:01Z", 
          "type": "feedback", 
          "id": "j8kdjv0v9pa5un", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Dennis - no, nothing wrong with unlinked SCCs per se. They&#39;re just redundant and thus not that interesting.\u00a0</p>\n<p></p>\n<p>Shihgian - there do not need to be 2 literals per SCC. The first example from lecture has one literal per SCC and Dennis&#39;s example that Mark drew above has 3 literals per SCC.</p>\n<p></p>\n<p><span style=\"text-decoration:line-through\">I think the student answer is a bit misleading when it says &#34;set the sink SCC $$S$$ to true (i.e. set $$\\overline{x_3} = T$$ and $$x_1 = T$$)&#34;. Perhaps I&#39;m misremembering, but isn&#39;t the sink SCC in the example from lecture just\u00a0$$\\overline{x_1}$$</span>? I wasn&#39;t thinking about the same example - apologies!</p>\n<p></p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T16:19:52Z", 
          "uid": "i18w67avy8e1uk", 
          "created": "2017-10-09T16:19:52Z", 
          "type": "feedback", 
          "id": "j8kdv8939ti5ia", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Thanks, Kate. Understood.\u00a0The only SCC drawing I saw was in this <a href=\"https://youtu.be/pCbP22BQz5A?t=89\" target=\"_blank\">lecture</a>. I might be missing some other lectures. I will re-watch\u00a0them.</p>\n<p></p>\n<p>Dennis was referring to this <a href=\"https://youtu.be/lMCZvxoZ4Jc?t=110\" target=\"_blank\">lecture</a>\u00a0for $$\\overline{x_3} = T$$ and $$x_1 = T$$. That is what prompted me to ask\u00a0which lecture is showing 1 literal per SCC.</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T16:36:04Z", 
          "uid": "i4iys7m3lpq2ij", 
          "created": "2017-10-09T16:36:04Z", 
          "type": "feedback", 
          "id": "j8keg2efox14xo", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Ah ha!\u00a0Multiple lecture examples! My bad, apologies.</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T17:51:54Z", 
          "uid": "idg5nm2lC96", 
          "created": "2017-10-09T17:51:54Z", 
          "type": "feedback", 
          "id": "j8kh5ljrfdw127", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>Kate: Yeah, it&#39;s quite tricky to create the example as each clause creates\u00a0two edges. But,\u00a0we have an example now :). We can connect the two SCCs by adding $$\\overline{x_3} \\lor x_2$$ to spice it up a bit.</p>\n<p></p>\n<p>Shihgian: Good point, and thanks! I believe the example that Kate is thinking of is from <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610670923\" target=\"_blank\">here</a>. In that example, each literal is its own SCC.</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-09T17:59:49Z", 
          "uid": "i4iys7m3lpq2ij", 
          "created": "2017-10-09T17:59:49Z", 
          "type": "feedback", 
          "id": "j8khfs8bfhp1kq", 
          "anon": "no", 
          "bucket_name": "Last week", 
          "config": {}, 
          "bucket_order": 5, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "<p>See also &#64;662. Similar stuff.</p>"
        }, 
        {
          "folders": [], 
          "updated": "2017-10-15T21:48:37Z", 
          "uid": "hq8hn0qyfuvyr", 
          "created": "2017-10-15T21:48:37Z", 
          "type": "feedback", 
          "id": "j8ta94ow4ek4lu", 
          "anon": "no", 
          "bucket_name": "Today", 
          "config": {}, 
          "bucket_order": 2, 
          "data": {
            "embed_links": null
          }, 
          "children": [], 
          "subject": "Kate, I&#39;m not sure whether your confusion about the meaning of SCC&#39;s in the 2-SAT problem has been cleared up, but here&#39;s my explanation. If there is an SCC that contains multiple literals, then that by itself, without even considering any other SCC&#39;s, means that all of those literals must have the same value.\n\nHere&#39;s a good example of that. Start with:\n$$x = y$$\n\nThat can be rewritten as:\n$$(x \\Rightarrow y) \\wedge (y \\Rightarrow x)$$\n\nAnd that can be rewritten as:\n$$(\\bar{x} \\vee y) \\wedge (x \\vee \\bar{y})$$\n\nWhen we form the graph of implications from this, we represent these implications:\n$$(x \\Rightarrow y)$$\n$$(\\bar{y} \\Rightarrow \\bar{x})$$\n$$(\\bar{x} \\Rightarrow \\bar{y})$$\n$$(y \\Rightarrow x)$$\n\nThat yields 2 SCC&#39;s, one of which says:\n$$x = y$$\nand the other says:\n$$\\bar{x} = \\bar{y}$$\n\nSince neither SCC has an edge to the other, it makes no difference what values we assign to $$x$$ and $$y$$, except that they must be the same."
        }
      ], 
      "subject": "<p>I think there&#39;s some confusion (or maybe I&#39;m the only confused one ;) correct me if so) about what it means to be an SCC in the 2-SAT problem. When we formulate G from the formula in CNF, we create a vertex\u00a0for each of the 2n literals separately (aka $$x_1$$ is one vertex and $$\\overline{x_1}$$ is a different vertex) and define the edges based on the implications from the clauses (the clauses are not SCCs). We then identify the SCCs using the\u00a0connected components algorithm from lecture -\u00a0<tt>SCC(G)</tt>. However, for\u00a0the first toy example from lecture: $$(\\overline{x_1} \\vee \\overline{x_2}) \\wedge (x_2 \\vee x_3) \\wedge (\\overline{x_3} \\vee \\overline{x_1})$$, if we draw out the graph, we see that none of the vertices are strongly connected - it&#39;s a DAG. Hence, each literal is its own SCC.</p>\n<p></p>\n<p>At this point, we can again use Dennis&#39;s student answer: we note that\u00a0$$x_1$$ is the source SCC and $$\\overline{x_1}$$ is the sink SCC, so we can set\u00a0$$\\overline{x_1} = True$$, which implies\u00a0$$x_1 = False$$, which is fine since nothing implies\u00a0$$x_1 = True$$ (hence it is [in] a source SCC).</p>"
    }, 
    {
      "folders": [], 
      "updated": "2017-10-10T20:58:49Z", 
      "no_upvotes": 0, 
      "uid": "hvil6y6khgk2ri", 
      "created": "2017-10-10T20:58:49Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j8m39t831v54xu", 
      "anon": "no", 
      "bucket_name": "Last week", 
      "config": {}, 
      "bucket_order": 5, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p>Thanks Dennis! I gotta chew on this a bit. I may have more questions once I process it :)</p>\n<p></p>\n<p>Thanks again!</p>"
    }
  ], 
  "nr": 660, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "graph_algorithms"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 3, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "graph_algorithms", 
    "student"
  ], 
  "created": "2017-10-07T20:36:49Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145166018, 
  "tag_good": [
    {
      "name": "Shihgian Lee", 
      "admin": false, 
      "photo": "1420394909_35.png", 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "i18w67avy8e1uk"
    }, 
    {
      "name": "Hugh Woltzen", 
      "admin": false, 
      "photo": null, 
      "us": false, 
      "role": "student", 
      "facebook_id": null, 
      "id": "iebwjhg152x642"
    }
  ], 
  "tag_good_arr": [
    "i18w67avy8e1uk", 
    "iebwjhg152x642"
  ], 
  "history": [
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the sink vertex that represents\u00a0$$X_{3}$$ = false and\u00a0$$X_{1}$$ = true (that is to say,\u00a0$$\\bar{X_{3}}$$ = True and\u00a0$$X_{1}$$ = True), and that we can remove this as its a sink. Ultimately we rule this out because it does not handle when\u00a0$$X_{3}$$ = True and $$X_1$$ = False (that is to say, $$X_{3}$$ = True and $$\\bar{X_{1}}$$ = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when\u00a0$$X_{3}$$ = True and\u00a0$$X_{1}$$ = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:46:21Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents\u00a0$$X_{3}$$ = false and\u00a0$$X_{1}$$ = true (that is to say,\u00a0$$\\bar{X_{3}}$$ = True and\u00a0$$X_{1}$$ = True). Ultimately we rule this out because it does not handle when\u00a0$$X_{3}$$ = True and $$X_1$$ = False (that is to say, $$X_{3}$$ = True and $$\\bar{X_{1}}$$ = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when\u00a0$$X_{3}$$ = True and\u00a0$$X_{1}$$ = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:44:50Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and $$X_1$$ = False (that is to say, $$X_{3}$$ = True and $$\\frac{ }{X_{1}}$$ = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this. $$\\bar{x}$$<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:43:32Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and $$X_1$$ = False (that is to say, $$X_{3}$$ = True and $$\\frac{ }{X_{1}}$$ = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:41:50Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and $$X_1$$ = False (that is to say, $$X_{3}$$ = True and bar(X_1) = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:40:27Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and $$X_1$$ = False (that is to say, X_# = True and bar(X_1) = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:39:04Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and $$X_{1}$$ = False (that is to say, X_# = True and bar(X_1) = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:38:53Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that represents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and X_1 = False (that is to say, X_# = True and bar(X_1) = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:37:14Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }, 
    {
      "content": "<p>Hi All,</p>\n<p></p>\n<p>So in <a href=\"https://classroom.udacity.com/courses/ud401/lessons/10195552385/concepts/101952610700923\" target=\"_blank\">the approach 1 for 2-SAT</a>, we theorize that we can find and remove sinks; we theorize that we find the vertex that rrepresents X_3 = false and x_1 = true (that is to say, bar(X_3&#43; = True and x_1 = True). Ultimately we rule this out because it does not handle when X_3 = True and X_1 = False (that is to say, X_# = True and bar(X_1) = True).\u00a0 It is said this produces a contradiction, but.....A) WHY does this produce a contradiction?\u00a0 I dont see it and would like to know why this is. I can understand why having a literal and its opposite in the same SCC would break the formula, but I dont understand this.<br /><br />And B), WHY is this important anyway if its the case where (when X_3 = True and X_1 = False)?\u00a0 What happens if this is never used?\u00a0 Isnt this considered a completely different vertex anyway?</p>", 
      "anon": "no", 
      "created": "2017-10-07T20:36:49Z", 
      "uid": "hvil6y6khgk2ri", 
      "subject": "Help! I Dont Understand the Motivation For The 2-SAT Algorithm!"
    }
  ]
}