{
  "status": "active", 
  "unique_views": 136, 
  "request_instructor_me": false, 
  "change_log": [
    {
      "type": "create", 
      "anon": "no", 
      "when": "2017-10-19T18:55:41Z", 
      "data": "j8ytu59wws3704", 
      "uid": "iddoxdh5wry2oa"
    }, 
    {
      "to": "j8ytu59rdvr701", 
      "anon": "no", 
      "when": "2017-10-20T01:31:37Z", 
      "type": "followup", 
      "uid": "i4iys7m3lpq2ij"
    }
  ], 
  "upvote_ids": [], 
  "id": "j8ytu59rdvr701", 
  "bookmarked": 4, 
  "no_answer": 1, 
  "i_edits": [], 
  "is_bookmarked": false, 
  "children": [
    {
      "folders": [], 
      "updated": "2017-10-20T01:31:37Z", 
      "no_upvotes": 0, 
      "uid": "i4iys7m3lpq2ij", 
      "created": "2017-10-20T01:31:37Z", 
      "type": "followup", 
      "no_answer": 0, 
      "id": "j8z7zb7069a7bk", 
      "anon": "no", 
      "bucket_name": "Today", 
      "config": {}, 
      "bucket_order": 2, 
      "data": {
        "embed_links": null
      }, 
      "children": [], 
      "subject": "<p>I think it means that\u00a0in later iterations if\u00a0you have an augmenting flow that goes y to z, the levels further increase.\u00a0Check out the &#34;delete/add effect&#34; slide to see this worked out further.</p>\n<p></p>\n<p>The\u00a0intuition here is that\u00a0if we use a particular, systematic way to identify augmenting paths (BFS), then we don&#39;t waste time pushing flow\u00a0forward and backward through the same edges(s) in our network (see the network in DPV 7.31 and imagine that you kept using augmenting paths through (A,B)). And as such, we can bound the number of iterations we&#39;ll need by something better than the value of the max flow.\u00a0</p>\n<p></p>\n<p>The notion of levels facilitates the proof\u00a0-&gt; by demonstrating that levels never decrease despite changes to the residual graph, we can bound the number of times we&#39;d add and remove an edge by the max possible level (n) and thus bound the number of iterations we&#39;ll need (mn/2).</p>\n<p></p>"
    }
  ], 
  "nr": 763, 
  "bucket_order": 2, 
  "type": "question", 
  "folders": [
    "graph_algorithms"
  ], 
  "no_answer_followup": 0, 
  "num_favorites": 2, 
  "bucket_name": "Today", 
  "q_edits": [], 
  "data": {
    "embed_links": []
  }, 
  "request_instructor": 0, 
  "tags": [
    "graph_algorithms", 
    "student", 
    "unanswered"
  ], 
  "created": "2017-10-19T18:55:41Z", 
  "is_tag_good": false, 
  "config": {}, 
  "s_edits": [], 
  "my_favorite": false, 
  "default_anonymity": "no", 
  "t": 1509145135936, 
  "tag_good": [], 
  "tag_good_arr": [], 
  "history": [
    {
      "content": "<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/j6f5zm92gj34gi/iddoxdh5wry2oa/j8yte8w6hi7d/ask.GIF\" alt=\"\" width=\"691\" height=\"372\" /></p>\n<p>&#34; If we add this edge from Y to Z to the residual network, We know the reverse direction edge must be on the augmenting path. Based on the Edmonds-Karp Alg, we get the path by running BFS. So if z =i, y =i&#43;1; So we added the edge from Y to Z back to the residual graph but this edge goes from a higher level to a lower level &#34;</p>\n<p>Does this mean that: although we add Y to Z back, the level of Z is still i and the level of Y is still i&#43;1, we can&#39;t change their level, the only thing is that after adding the edge from Y to Z, the flow can go from higher level vertex to the lower level vertex ?</p>", 
      "anon": "no", 
      "created": "2017-10-19T18:55:41Z", 
      "uid": "iddoxdh5wry2oa", 
      "subject": "MF4: EK Alg, Video Proof of Claim. Will the flow go from higher level v to the lower level v ?"
    }
  ]
}